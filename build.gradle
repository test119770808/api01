buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}


plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    runtimeOnly 'com.mysql:mysql-connector-j'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // modelmapper
    implementation 'org.modelmapper:modelmapper:3.2.0'

    // Swagger UI(spring boot 3에서 사용)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    // JSON문자열 처리를 위한 GSON
    implementation 'com.google.code.gson:gson:2.10.1'

    //jjwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5', 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    )


}

tasks.named('test') {
    useJUnitPlatform()
}


sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java","$projectDir/build/generated"]
        }
    }
}

// compile 정리...
compileJava.dependsOn('clean')